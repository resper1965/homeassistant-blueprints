blueprint:
  name: MMWAVE com Intervalo de Horário
  description: Aciona dispositivos com base na detecção de presença humana pelo sensor. Funciona entre horários personalizados especificados pelo usuário ou durante os períodos definidos em relação ao sol, e desliga dispositivos se não houver detecção por mais de 30 segundos.
  domain: automation
  input:
    presence_sensor:
      name: Sensor de presença humana
      description: Escolha o sensor de presença humana. Certifique-se de que o sensor está calibrado corretamente para refletir a presença com precisão.
      selector:
        entity:
          domain: binary_sensor
    controlled_entities:
      name: Entidades controladas
      description: Selecione os dispositivos ou entidades a serem controlados
      selector:
        target:
          entity:
            domain: 
              - switch
              - light
              - media_player
    custom_start_time:
      name: Horário de Início Personalizado
      description: Defina um horário de início personalizado (HH:MM) ou deixe em branco para usar o pôr do sol.
      default: ""
      selector:
        time:
    custom_end_time:
      name: Horário de Fim Personalizado
      description: Defina um horário de fim personalizado (HH:MM) ou deixe em branco para usar uma hora após o nascer do sol.
      default: ""
      selector:
        time:

trigger:
  - platform: state
    entity_id: !input presence_sensor
    to: 'on'
  - platform: state
    entity_id: !input presence_sensor
    to: 'off'
    for: "00:00:30"

condition:
  - condition: or
    conditions:
      - condition: and
        conditions:
          - condition: state
            entity_id: !input presence_sensor
            state: 'on'
          - condition: or
            conditions:
              - condition: template
                value_template: >
                  {{ states('sensor.time') >= (states.input_text.custom_start_time.state if states.input_text.custom_start_time.state != '' else state_attr('sun.sun', 'next_setting')) and
                     states('sensor.time') <= (states.input_text.custom_end_time.state if states.input_text.custom_end_time.state != '' else (state_attr('sun.sun', 'next_rising') | as_timestamp + 3600) | timestamp_custom('%H:%M', False)) }}
      - condition: state
        entity_id: !input presence_sensor
        state: 'off'

action:
  - choose:
      - conditions:
          - condition: state
            entity_id: !input presence_sensor
            state: 'on'
        sequence:
          - service: homeassistant.turn_on
            target: !input controlled_entities
      - conditions:
          - condition: state
            entity_id: !input presence_sensor
            state: 'off'
        sequence:
          - service: homeassistant.turn_off
            target: !input controlled_entities

mode: restart
